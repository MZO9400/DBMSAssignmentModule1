using System;
using System.Text;
using System.Data.SqlClient;

namespace DBMS {
	public class ConnectionString {
		public static String getConnectionString() {
			return new SqlConnectionStringBuilder {
				DataSource = "HAMZAST440\\SQLSERVER",
				IntegratedSecurity = true,
				InitialCatalog = "DBMS"
			}.ConnectionString;
		}
		public static String getPassword() {
			return "61qz+AW<b]<sSCC9";
		}
		public static String[] getQestions() {
			String[] businessQuestions = {
				"SELECT PERSON.NAME, PERFORMER.STAGE_NAME, RECORD.TITLE, RECORD.DATE_OF_RELEASE, RECORD.GENRE,PROGRAM.PROGRAM_NUMBER, SEASON.SEASON_NUMBER FROM BAND INNER JOIN BAND_RECORD_N ON BAND.BAND_ID = BAND_RECORD_N.BAND_ID INNER JOIN PERFORMER ON BAND.BAND_ID = PERFORMER.BAND_ID INNER JOIN PERFORMER_BAND_N ON BAND.BAND_ID = PERFORMER_BAND_N.BAND_ID AND PERFORMER.CNIC = PERFORMER_BAND_N.CNIC INNER JOIN PERSON ON PERFORMER.CNIC = PERSON.CNIC INNER JOIN RECORD ON BAND_RECORD_N.RECORD_TITLE = RECORD.TITLE AND BAND_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE INNER JOIN SEASON ON RECORD.SEASON_NUMBER = SEASON.SEASON_NUMBER INNER JOIN PROGRAM ON SEASON.SEASON_NUMBER = PROGRAM.SEASON_NUMBER UNION SELECT PERSON.NAME, PERFORMER.STAGE_NAME, RECORD.TITLE, RECORD.DATE_OF_RELEASE, RECORD.GENRE, PROGRAM.PROGRAM_NUMBER, SEASON.SEASON_NUMBER FROM SEASON INNER JOIN PROGRAM ON SEASON.SEASON_NUMBER = PROGRAM.SEASON_NUMBER CROSS JOIN PERFORMER INNER JOIN PERFORMER_RECORD_N ON PERFORMER.CNIC = PERFORMER_RECORD_N.CNIC INNER JOIN PERSON ON PERFORMER.CNIC = PERSON.CNIC INNER JOIN RECORD ON PERFORMER_RECORD_N.RECORD_TITLE = RECORD.TITLE AND PERFORMER_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE",
				"SELECT COUNT(A.STAGE_NAME) APPEARANCES, A.STAGE_NAME, A.GENRE FROM(SELECT DBO.PERFORMER.STAGE_NAME, DBO.PERFORMER.GENRE, DBO.PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME FROM DBO.BAND INNER JOIN DBO.BAND_RECORD_N ON DBO.BAND.BAND_ID = DBO.BAND_RECORD_N.BAND_ID INNER JOIN DBO.PERFORMER ON DBO.BAND.BAND_ID = DBO.PERFORMER.BAND_ID INNER JOIN DBO.PERFORMER_BAND_N ON DBO.BAND.BAND_ID = DBO.PERFORMER_BAND_N.BAND_ID AND DBO.PERFORMER.CNIC = DBO.PERFORMER_BAND_N.CNIC INNER JOIN DBO.PERFORMER_INSTRUMENTS_N ON DBO.PERFORMER.CNIC = DBO.PERFORMER_INSTRUMENTS_N.CNIC UNION ALL SELECT DBO.PERFORMER.STAGE_NAME, DBO.PERFORMER.GENRE, DBO.PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME FROM DBO.PERFORMER INNER JOIN DBO.PERFORMER_RECORD_N ON DBO.PERFORMER.CNIC = DBO.PERFORMER_RECORD_N.CNIC INNER JOIN DBO.PERFORMER_INSTRUMENTS_N ON DBO.PERFORMER.CNIC = DBO.PERFORMER_INSTRUMENTS_N.CNIC) A GROUP BY A.STAGE_NAME, A.GENRE ",
				"SELECT PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME, PERSON.NAME, PERSON.CNIC, CONTACT_PERSON_N.CONTACT_NUMBER, ADDRESS.LANDLINE_NUMBER, ADDRESS.HOUSE, ADDRESS.STREET, ADDRESS.CITY FROM PERFORMER_INSTRUMENTS_N INNER JOIN PERFORMER ON PERFORMER_INSTRUMENTS_N.CNIC = PERFORMER.CNIC INNER JOIN PERSON ON PERFORMER.CNIC = PERSON.CNIC INNER JOIN CONTACT_PERSON_N ON PERSON.CNIC = CONTACT_PERSON_N.CNIC INNER JOIN ADDRESS ON PERSON.ADDRESS_ID = ADDRESS.ADDRESS_ID ",
				"SELECT INSTRUMENT_NAME, COUNT(INSTRUMENT_NAME) COUNT FROM PERFORMER_INSTRUMENTS_N GROUP BY INSTRUMENT_NAME ORDER BY COUNT DESC ",
				"SELECT TITLE, MAX(AUTHOR) AUTHOR, MAX(STAGE_NAME) [TOP PERFORMER] FROM(SELECT RECORD.TITLE, RECORD.AUTHOR, PERFORMER.STAGE_NAME FROM BAND INNER JOIN BAND_RECORD_N ON BAND.BAND_ID = BAND_RECORD_N.BAND_ID INNER JOIN PERFORMER ON BAND.BAND_ID = PERFORMER.BAND_ID INNER JOIN PERFORMER_BAND_N ON BAND.BAND_ID = PERFORMER_BAND_N.BAND_ID AND PERFORMER.CNIC = PERFORMER_BAND_N.CNIC INNER JOIN RECORD ON BAND_RECORD_N.RECORD_TITLE = RECORD.TITLE AND BAND_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE) T1 GROUP BY TITLE having count(title) > 1 UNION ALL SELECT TITLE, AUTHOR, STAGE_NAME FROM (SELECT RECORD.TITLE, RECORD.AUTHOR, PERFORMER.STAGE_NAME FROM PERFORMER INNER JOIN PERFORMER_RECORD_N ON PERFORMER.CNIC = PERFORMER_RECORD_N.CNIC INNER JOIN RECORD ON PERFORMER_RECORD_N.RECORD_TITLE = RECORD.TITLE AND PERFORMER_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE) T1 GROUP BY TITLE, AUTHOR, STAGE_NAME having count(TITLE) > 1 ",
				"SELECT RECORD.TITLE, PERFORMER.STAGE_NAME, PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME, INSTRUMENT.TYPE_OF_KEYS FROM BAND INNER JOIN BAND_RECORD_N ON BAND.BAND_ID = BAND_RECORD_N.BAND_ID INNER JOIN PERFORMER ON BAND.BAND_ID = PERFORMER.BAND_ID INNER JOIN PERFORMER_BAND_N ON BAND.BAND_ID = PERFORMER_BAND_N.BAND_ID AND PERFORMER.CNIC = PERFORMER_BAND_N.CNIC INNER JOIN PERFORMER_INSTRUMENTS_N ON PERFORMER.CNIC = PERFORMER_INSTRUMENTS_N.CNIC INNER JOIN RECORD ON BAND_RECORD_N.RECORD_TITLE = RECORD.TITLE AND BAND_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE INNER JOIN INSTRUMENT ON PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME = INSTRUMENT.NAME UNION ALL SELECT RECORD.TITLE, PERFORMER.STAGE_NAME, PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME, INSTRUMENT.TYPE_OF_KEYS FROM INSTRUMENT INNER JOIN PERFORMER_INSTRUMENTS_N ON INSTRUMENT.NAME = PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME INNER JOIN PERFORMER ON PERFORMER_INSTRUMENTS_N.CNIC = PERFORMER.CNIC INNER JOIN PERFORMER_RECORD_N ON PERFORMER.CNIC = PERFORMER_RECORD_N.CNIC INNER JOIN RECORD ON PERFORMER_RECORD_N.RECORD_TITLE = RECORD.TITLE AND PERFORMER_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE ",
				"SELECT T1.TITLE, count(TITLE) [INSTRUMENT COUNT] FROM(SELECT RECORD.TITLE, PERFORMER.STAGE_NAME, PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME, INSTRUMENT.TYPE_OF_KEYS FROM INSTRUMENT INNER JOIN PERFORMER_INSTRUMENTS_N ON INSTRUMENT.NAME = PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME INNER JOIN PERFORMER ON PERFORMER_INSTRUMENTS_N.CNIC = PERFORMER.CNIC INNER JOIN PERFORMER_RECORD_N ON PERFORMER.CNIC = PERFORMER_RECORD_N.CNIC INNER JOIN RECORD ON PERFORMER_RECORD_N.RECORD_TITLE = RECORD.TITLE AND PERFORMER_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE) T1 GROUP BY T1.TITLE having count(TITLE)>3 ",
				"SELECT X.CONTACT_NUMBER, X.STAGE_NAME FROM(SELECT * FROM (SELECT CONTACT_PERSON_N.CONTACT_NUMBER, PERFORMER.STAGE_NAME, PERFORMER_BAND_N.BAND_ID BID FROM CONTACT_PERSON_N INNER JOIN PERFORMER ON CONTACT_PERSON_N.CNIC = PERFORMER.CNIC INNER JOIN PERFORMER_BAND_N ON PERFORMER.CNIC = PERFORMER_BAND_N.CNIC INNER JOIN PERSON ON CONTACT_PERSON_N.CNIC = PERSON.CNIC AND PERFORMER.CNIC = PERSON.CNIC) R1 INNER JOIN (SELECT TOP 1 BAND_ID, COUNT(BAND_ID) COUNT FROM BAND_RECORD_N GROUP BY BAND_ID ORDER BY COUNT DESC) T1 ON T1.BAND_ID=R1.BID) X ",
				"SELECT INSTRUMENT.TYPE_OF_KEYS, RECORD.TITLE FROM RECORD INNER JOIN PERFORMER_RECORD_N ON RECORD.TITLE = PERFORMER_RECORD_N.RECORD_TITLE AND RECORD.DATE_OF_RELEASE = PERFORMER_RECORD_N.DATE_OF_RELEASE INNER JOIN PERFORMER ON PERFORMER_RECORD_N.CNIC = PERFORMER.CNIC INNER JOIN PERFORMER_INSTRUMENTS_N ON PERFORMER.CNIC = PERFORMER_INSTRUMENTS_N.CNIC INNER JOIN INSTRUMENT ON PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME = INSTRUMENT.NAME WHERE INSTRUMENT.TYPE_OF_KEYS in(SELECT T1.TYPE_OF_KEYS FROM (SELECT TOP 3 INSTRUMENT.TYPE_OF_KEYS, COUNT(TYPE_OF_KEYS) COUNT FROM INSTRUMENT INNER JOIN PERFORMER_INSTRUMENTS_N ON INSTRUMENT.NAME = PERFORMER_INSTRUMENTS_N.INSTRUMENT_NAME GROUP BY INSTRUMENT.TYPE_OF_KEYS ORDER BY COUNT DESC) T1) ",
				"SELECT T.STAGE_NAME, T.GENRE FROM(SELECT DISTINCT PERFORMER.STAGE_NAME, RECORD.GENRE, SEASON.SEASON_NUMBER FROM SEASON INNER JOIN PROGRAM ON SEASON.SEASON_NUMBER = PROGRAM.SEASON_NUMBER INNER JOIN RECORD ON SEASON.SEASON_NUMBER = RECORD.SEASON_NUMBER INNER JOIN PERFORMER_RECORD_N ON RECORD.TITLE = PERFORMER_RECORD_N.RECORD_TITLE AND RECORD.DATE_OF_RELEASE = PERFORMER_RECORD_N.DATE_OF_RELEASE INNER JOIN PERFORMER ON PERFORMER_RECORD_N.CNIC = PERFORMER.CNIC UNION ALL SELECT DISTINCT PERFORMER.STAGE_NAME, RECORD.TITLE, SEASON.SEASON_NUMBER FROM SEASON INNER JOIN PROGRAM ON SEASON.SEASON_NUMBER = PROGRAM.SEASON_NUMBER CROSS JOIN BAND INNER JOIN BAND_RECORD_N ON BAND.BAND_ID = BAND_RECORD_N.BAND_ID INNER JOIN PERFORMER ON BAND.BAND_ID = PERFORMER.BAND_ID INNER JOIN PERFORMER_BAND_N ON BAND.BAND_ID = PERFORMER_BAND_N.BAND_ID AND PERFORMER.CNIC = PERFORMER_BAND_N.CNIC INNER JOIN RECORD ON BAND_RECORD_N.RECORD_TITLE = RECORD.TITLE AND BAND_RECORD_N.DATE_OF_RELEASE = RECORD.DATE_OF_RELEASE) T WHERE T.SEASON_NUMBER = (SELECT TOP(1) MAX(SEASON_NUMBER) FROM SEASON) ",
			};
			return businessQuestions;
		}
	}
}
